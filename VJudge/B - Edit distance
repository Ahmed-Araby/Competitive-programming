/*
Level 3
Week 5.1 - Practice contest
*/
#include <bits/stdc++.h>
using namespace std;
int main()
{
    int t;
    cin>>t;
    while(t--){
        string a, b;
        cin>>a>>b;
        int n = a.size(), m = b.size();

        int **dp = new int*[n+1];
        for(int i=0; i<=n; i++){
            dp[i] = new int [m+1];
            for(int j=0; j<=m; j++)
                dp[i][j] = -1;
        }

        for(int i=n; i>=0; i--){
            for(int j=m; j>=0; j--){
                if(i==n && j==m)
                    dp[i][j] = 0;
                else if(i==n)
                    dp[i][j] = m-j;
                else if(j==m)
                    dp[i][j] = n-i;
                else if(a[i]==b[j]) dp[i][j] = dp[i+1][j+1];
                else{
                    /* any delete operation could be replaced with insert and vice versus*/
                    dp[i][j] = INT_MAX;
                    dp[i][j] = min(dp[i][j], dp[i+1][j] + 1); // delete on i or insert in j
                    dp[i][j] = min(dp[i][j], dp[i][j+1] + 1); // -------- on j or ------ in i
                    dp[i][j] = min(dp[i][j], dp[i+1][j+1] + 1); // replace one to be like the other.
                }
            }

        }
        cout<<dp[0][0]<<endl;
    }
    return 0;
}
