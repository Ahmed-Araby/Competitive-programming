#include <bits/stdc++.h>
using namespace std;
// N , L , S , O
// N  , E , S , W
int n , m , s;
int yd[]={-1 , 0 , 1 , 0};
int xd[]={0  , 1 , 0 , -1};
// global
int counter=0;
// end
bool valid(int y , int x){return (y>=0 && y<n && x>=0 && x<m);}
int main()
{
    while(cin>>n>>m>>s && n && m && s)
    {
        int y , x , p;
        vector<string> g(120);
        for(int i=0; i<n; i++){
            cin>>g[i];
            for(int j=0; j<m; j++){
                char a=g[i][j];
                if(a=='O' || a=='S' || a=='L' || a=='N'){
                    y=i , x=j; // robot position
                    if(a=='O')  // west
                        p=3;
                    else if(a=='S')
                        p=2;
                    else if(a=='L')  // east
                        p=1;
                    else
                        p=0;
                }
            }
        }
        string com;
        cin>>com;
        for(int i=0; i<com.size(); i++)
        {
            if(com[i]=='E')
            p-1<0?p=3:p=p-1;
            else if(com[i]=='D')
                ++p%=4;
            else
            {
                int ny , nx;
                ny=y+yd[p];
                nx=x+xd[p];
                if(!valid(ny , nx) || g[ny][nx]=='#')
                    continue;
                else if(g[ny][nx]=='*'){
                    counter++;
                    g[ny][nx]='.';
                }
                y=ny , x=nx;

            }
        }
        cout<<counter<< endl;
        // reinitialize
        counter=0;
    }
    return 0;
}
