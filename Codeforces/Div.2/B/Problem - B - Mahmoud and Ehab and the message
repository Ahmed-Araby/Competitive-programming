// from Codeforces Round #473 (Div. 2)
#include <bits/stdc++.h>
using namespace std;
int n , k , m ;
long long res;
map<string , int> cost;
vector<string> word;
int main()
{
  cin>>n>>k>>m;
  for(int i=0; i<n; i++)   // taking the words
  {
    string tmp;
    cin>>tmp;
    word.push_back(tmp);
    cost[tmp];
  }
  
  int x;
  for(int i=0; i<n; i++) // taking the cost
  {
    cin>>x;
    cost[word[i]]=x;
  }

  for(int i=0; i<k; i++)  // groubs
  {
    cin>>x;
    int mini=INT_MAX;
    vector<int> ind;
    for(int j=0; j<x; j++)  // groub
    {
      int tmp;
      cin>>tmp; // index of a word in the vector word
      ind.push_back(tmp-1);
      if(cost[word[tmp-1]]<mini)
      mini=cost[word[tmp-1]];
    }
    for(vector<int>::iterator j=ind.begin(); j!=ind.end(); j++)
      cost[word[*j]]=mini;
  }
  
  for(int i=0; i<m; i++)
  {
    string tmp;
    cin>>tmp;
    res+=cost[tmp];
  }
  cout<<res<< endl;
  return 0;
}
