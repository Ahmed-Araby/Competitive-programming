#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define big 1000000007
int n , k , d;
ll mem[101][101][2];
ll dfs(int sum=0 , bool tell=0)
{
  // un valid path
  if(sum>n || (sum==n && !tell))
  return 0;  // no way
  // base case
  if(sum==n && tell)
  return 1;


  // recursive case
  // go throw the children
  ll counter=0;
  for(int i=1; i<=k; i++)
  {
    bool check=0;
    if(i>=d)
    check=1;
    // dp case
    ll &dp=mem[sum][i][check|tell];
    if(dp==-1)
        dp=dfs(sum+i , check|tell)%big;  // store info about each node and summation and the validation state we come with
    counter=(counter+dp)%big;
  }
  return counter;
}
int main()
{
  cin>>n>>k>>d;
  for(int i=0; i<=n; i++)
    for(int j=0; j<=k; j++)
    for(int q=0; q<2; q++)
    mem[i][j][q]=-1;

  cout<<dfs()<< endl;
  return 0;
}
