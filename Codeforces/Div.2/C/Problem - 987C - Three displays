#include <bits/stdc++.h>
using namespace std;
int n , f[3001]={0} , c[3001]={0} , memo[3001][3001][4];
int solve(int prv , int i , int no)
{
    // base case
    if(i==n && no<3)
        {return 400000000;}
    else if(no==3)  // can`t choose any more
        return 0;
    // dp case
    if(prv!=-1 && memo[prv][i][no]!=-1){
        return memo[prv][i][no];
    }
    // recursive case
    int pick=400000000 , leave=400000000;
    if(prv==-1 || f[prv]<f[i])
    pick=c[i]+solve(i , i+1 , no+1);
    leave=solve(prv , i+1 , no);
    if(prv!=-1)
        memo[prv][i][no]=min(pick , leave);
    return min(pick , leave);
}
int main()
{
    cin>>n;
    for(int i=0; i<=n; i++)
        for(int j=0; j<=n; j++)
        for(int q=0; q<=5; q++)
        memo[i][j][q]=-1;
    for(int i=0; i<n; i++)
        cin>>f[i];
    for(int i=0; i<n; i++)
        cin>>c[i];
    int mini=solve(-1 , 0 , 0);
    if(mini==400000000)
        cout<<-1<< endl;
    else
        cout<<mini<< endl;
    return 0;
}
