// from Educational Codeforces Round 19
// it based in the topic "number theory" 
#include <bits/stdc++.h>
using namespace std;
int n , k;
vector<int> fac;
void solve(int den , int num)
{
    // base case
    if(num==1 || den==sqrt(num)+2)
        return;
    // recursive call
    if(num%den==0)
    {
        fac.push_back(den);
        solve(den , num/den);
    }
    else
        solve(den+1 , num);
}
int main()
{
    cin>>n>>k;
    solve(2 , n);
    if(fac.size()>=k)
    {
        int x=fac.size();
        for(int i=0; i<x-k; i++)
        {
            fac[fac.size()-2]*=fac[fac.size()-1];
            fac.pop_back();
        }
        for(vector<int>::iterator itr=fac.begin(); itr!=fac.end(); itr++)
            cout<<*itr<<" ";
    }
    else
        cout<<-1<< endl;
    return 0;
}
