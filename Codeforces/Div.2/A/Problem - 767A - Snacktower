// from Codeforces Round #398 (Div. 2)
#include <bits/stdc++.h>
using namespace std;
int main()
{
    int n , x;
    queue<int> snacks;  // take snacks from the sky
    priority_queue<int> notvalid;   // sort the unvalid sizes of the snacks
    cin>>n;
    for(int i=0; i<n; i++)
    {
        cin>>x;
        snacks.push(x);  // take snacks from the sky
    }
    x=n; // to determine the next valid size
    for(int i=0; i<n; i++)   // valid size respect to x
    {
        if(snacks.front()==x)  // n  make sure that the DS not empty during the  checking
        {
            cout<<snacks.front();
            snacks.pop();  // put it in the tower
            x--;  // next valid size of snackes
            while(!notvalid.empty() && notvalid.top()==x)  // take care of && and , between conditions 
            {
                cout<<" "<<x;  // x=notvalid.top()
                x--;
                notvalid.pop();  // put it in the tower
            }
            cout<< endl;
        }
        else  // no valid size
        {
            cout<< endl;  // empty line
            notvalid.push(snacks.front());  // get sorted to make it easy to check with the new x
            snacks.pop();
        }
    }
    return 0;
}
